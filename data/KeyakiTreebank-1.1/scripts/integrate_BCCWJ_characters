#!/bin/bash

################################################
# set default parameters

PATH=$(dirname $0):${PATH}

BASE_DIR=$(dirname $0)/..
ANNOTATION=${BASE_DIR}/closed
DESTINATION=${BASE_DIR}/treebank


################################################
# collect command line given parameter values

while test $# -gt 0 ; do
  case "$1" in

      --diff)
         DIFF=1 ; shift 1 ;;

      --meld)
         MELD=1 ; DIFF=1 ; shift 1 ;;

      --data)
         DATA="${DATA} $2" ; shift 2 ;;

      --source)
         SOURCE="$2" ; shift 2 ;;

      --annotation)
         ANNOTATION="$2" ; shift 2 ;;

      --destination)
         DESTINATION="$2" ; shift 2 ;;

      *) echo "$1 is not an option."; exit ;;

  esac
done


################################################
# check there are directories

if test ! "${SOURCE}"; then
  echo "A source directory needs to be specified with the --source flag."
  exit
fi

if test ! -d "${SOURCE}"; then
  echo "The script cannot complete."
  echo "There is no \"${SOURCE}\" directory."
  exit
fi

if test ! ${DIFF}; then
  if test ! -d "${ANNOTATION}"; then
    echo "The script cannot complete."
    echo "There is no \"${ANNOTATION}\" directory."
    exit
  fi
  if test ! -d "${DESTINATION}"; then
    echo "The script cannot complete."
    echo "There is no \"${DESTINATION}\" directory."
    exit
  fi
fi


################################################
# determine DATA

if test ! "${DATA}"; then
  DATA="PN1a_00002 PN1a_00005 PN1a_00006 PN1a_00008 PN1a_00009 PN1a_00012 PN1a_00013 PN1a_00014 PN1a_00015 PN1a_00020 PN1a_00021 PN1a_00022 PN1a_00024 PN1a_00025 PN1b_00002 PN1b_00003 PN1b_00004 PN1b_00005 PN1b_00008 PN1b_00009 PN1b_00018 PN1c_00001 PN1c_00004 PN1c_00005 PN1c_00006 PN1c_00007 PN1c_00011 PN1c_00012 PN1c_00013 PN1c_00015 PN1c_00017 PN1c_00018 PN1c_00020 PN1d_00001 PN1d_00002 PN1d_00003 PN1d_00004 PN1d_00005 PN1d_00006 PN1d_00009 PN1d_00010 PN1d_00011 PN1d_00012 PN1d_00014 PN1d_00016 PN1d_00018 PN1d_00020 PN1d_00021 PN1d_00024 PN1e_00001 PN1e_00002 PN1e_00003 PN1e_00004 PN1e_00006 PN1e_00007 PN1e_00008 PN1e_00011 PN1e_00016 PN1e_00017 PN1e_00018 PN1f_00001 PN1f_00002 PN1f_00006 PN1f_00010 PN1f_00012 PN1f_00013 PN1f_00014 PN1f_00020 PN1f_00021 PN1g_00002 PN1g_00006 PN1g_00007 PN1g_00010 PN1g_00015 PN2a_00006 PN2a_00008 PN2a_00009 PN2a_00013 PN2a_00014 PN2a_00016 PN2a_00017"
fi


################################################
# parts

function character_per_line () {
  awk -v NAME=$1 '{ n = split($0, parts, "") ; for (i = 1; i <= n; i++) { print parts[i], ++num, NAME } }' 
}


################################################
# main script

for i in ${DATA}; do
  TEMP1="${TMP:-/tmp}/output_source_${i}"
  TEMP2="${TMP:-/tmp}/output_annotated_${i}"
  ##
  extract_data --extension ".xml" --dir "${SOURCE}" --look "${i}" | \
  BCCWJ_to_unidic | \
  awk '{ print $1 }' | \
  grep -v "EOS" | \
  character_per_line ${i} > ${TEMP1}
  ##
  if test ${DIFF}; then
    Keyaki "${i}" | yield -j | character_per_line "${i}" > ${TEMP2}
    if test "${MELD}"; then
      meld ${TEMP1} ${TEMP2}
    else
      diff ${TEMP1} ${TEMP2}
    fi
  else
    echo "${i}"
    cat ${TEMP1} | awk '{ print $1 }' > ${TEMP2}
    extract_data --extension ".psd" --dir "${ANNOTATION}" --look "${i}" | \
    obfuscate_to_tree ${TEMP2} | \
    munge-trees -p | \
    sed "s/^(/\n(/" > "${DESTINATION}/$(extract_data --extension ".psd" --dir "${ANNOTATION}" | grep "${i}" | awk '{ print $2 }')".psd
  fi
  rm ${TEMP1} ${TEMP2}
done

